services:
  collector:
    image: otel/opentelemetry-collector-contrib:0.106.1
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - type: bind
        source: ./otel-collector/otel-collector-config.yaml
        target: /etc/otel-collector-config.yaml
    ports:
      - "4318:4318"
      - "4317:4317"
    depends_on:
      clickhouse:
        condition: service_healthy
        restart: true
  # jaeger:
  #   image: jaegertracing/all-in-one:1.56
  #   environment:
  #     COLLECTOR_OTLP_GRPC_HOST_PORT: 0.0.0.0:4317
  #     COLLECTOR_OTLP_HTTP_HOST_PORT: 0.0.0.0:4318
  #     METRICS_STORAGE_TYPE: prometheus
  #     PROMETHEUS_SERVER_URL: http://prometheus:9090
  #     PROMETHEUS_QUERY_NORMALIZE_CALLS: true
  #     PROMETHEUS_QUERY_NORMALIZE_DURATION: true
  #   ports:
  #     - "16686:16686" # Web UI
  postgres:
    restart: always
    image: "postgres"
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
  flagd:
    image: ghcr.io/open-feature/flagd:latest
    command: start --uri http://host.docker.internal:3000/api/feature
    ports:
      - "8013:8013"
  keycloak:
    image: quay.io/keycloak/keycloak:25.0.4
    restart: always
    command: "start-dev --import-realm"
    ports:
      - "8080:8080"
    volumes:
      - "./keycloak:/opt/keycloak/data/import"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin

  clickhouse:
    image: clickhouse/clickhouse-server:24.7
    healthcheck:
      test: wget --spider http://clickhouse:8123/ping > /dev/null 2>&1 || exit 1
      timeout: 5s
      interval: 5s
      retries: 5
    volumes:
      - type: bind
        source: ./clickhouse/sql/01_otel_db.sql
        target: /docker-entrypoint-initdb.d/01_otel_db.sql
    #     - type: bind
    #       source: ./clickhouse/clickhouse-config.xml
    #       target: /etc/clickhouse-server/config.xml
    ports:
      - 8123:8123
      - 9000:9000
